<Application x:Class="ScoreboardDesign.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ScoreboardDesign"
             StartupUri="Window1.xaml">

    <Application.Resources>


        <!--- START 
        Buttons Style:
        
        1-IncreasButton
        2-DecreasButton
        3-BlueButton
        4-BlackButton
        5-RedButton
        6-ReplayButton
        7-PlayButton
        8-StopButton
        
        TargetType => Button
        
    -->

        <!---Increas Button -->

        <Style x:Key="IncreasButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF1149D0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3F68CA"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3F68CA"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF1149D0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF1149D0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FFA1BDFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFA1BDFF"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10,10,0,0" />
                </Style>
            </Style.Resources>
        </Style>


        <!---Decreas Button -->

        <Style x:Key="DecreasButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF2A3036" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF515A6D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1a1d24"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF9FAECC"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0,0,10,10" />
                </Style>
            </Style.Resources>
        </Style>

        <!---  Blue Button-->

        <Style x:Key="BlueButton" TargetType="Button">
            <Setter Property="Background" Value="#FF1149D0" />
            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Height" Value="59" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="175" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontFamily" Value="Malgun Gothic" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3F68CA"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3F68CA"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF1149D0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF1149D0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FFA1BDFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFA1BDFF"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--- Black Button-->
        <Style x:Key="BlackButton" TargetType="Button">
            <Setter Property="Background" Value="#1a1d24"/>
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Height" Value="59" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="175" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontFamily" Value="Malgun Gothic" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF515A6D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1a1d24"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF9FAECC"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--- Red Button-->
        <Style x:Key="RedButton" TargetType="Button">
            <Setter Property="Background" Value="#cc4959"/>
            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Height" Value="59" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="175" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontFamily" Value="Malgun Gothic" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
        </Style>

        <!---Replay Button-->

        <Style x:Key="ReplayButton" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="img/reset@8x.png" Stretch="Uniform"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="31" />
            <Setter Property="Width" Value="37" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/reset@8x-MouseOver.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/reset@8x.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF9FAECC"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0,0,0,0" />
                </Style>
            </Style.Resources>
        </Style>

        <!---Play Button-->
        <Style x:Key="PlayButton" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="img/play@8x.png" Stretch="Uniform"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="31" />
            <Setter Property="Width" Value="37" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/play@8x - houver (2).png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/play@8x.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF9FAECC"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0,0,0,0" />
                </Style>
            </Style.Resources>
        </Style>

        <!---Stop Button-->
        <Style x:Key="StopButton" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="img/stop@8x.png" Stretch="Uniform"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="31" />
            <Setter Property="Width" Value="37" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/stop@8x (2).png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="img/stop@8x.png" Stretch="Uniform"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF9FAECC"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFC3CCDF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0,0,0,0" />
                </Style>
            </Style.Resources>
        </Style>



        <!-- END Buttons Style-->


        <!--- Make all the element border ROUNDED () -->
        <Style TargetType="Border">
            <Setter Property= "CornerRadius" Value="10,10,10,10"/>
        </Style>

        <!--- All Viewbox is uniformed when it's Zoom in and Zoom out -->
        <Style TargetType="Viewbox">
            <Setter Property="Stretch" Value="Uniform"/>
        </Style>

        <!---The Icons have static Height and  Margin-->
        <Style x:Key="icon" TargetType="Image">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="15" />
        </Style>




        <!-- START
        Text Style:
        
         1-Title
         2-SubTitle
         3-SubTitleGray
         4-Paragraph
         5-TextNumber
        
        TargetType => TextBlock
        -->


        <!-- Title-->
        <Style x:Key="Title" TargetType="TextBlock">

            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="50" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="MoeumT R" />

        </Style>

        <!-- SubTitle-->
        <Style x:Key="SubTitle" TargetType="TextBlock">

            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="55" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="MoeumT R" />

        </Style>

        <!-- SubTitle Gray-->
        <Style x:Key="SubTitleGray" TargetType="TextBlock">

            <Setter Property="Foreground" Value="#6D7077" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Malgun Gothic" />

        </Style>

        <!-- Paragraph-->
        <Style x:Key="Paragraph" TargetType="TextBlock">

            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="21" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Malgun Gothic" />

        </Style>

        <!-- TextNumber-->
        <Style x:Key="TextNumber" TargetType="TextBlock">

            <Setter Property="Foreground" Value="#FFC3CCDF" />
            <Setter Property="Margin" Value="15" />
            <Setter Property="FontSize" Value="46" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Digital-7" />

        </Style>

        <!-- END Text Style-->


        <!-- Check box Style-->
        <SolidColorBrush x:Key="OptionMark.Static.Background1" Color="#FF1A1D24"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background1" Color="#FF1A1D24"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background1" Color="#FF1A1D24"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph1" Color="#FFC3CCDF"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background1" Color="#FF788090"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border1" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph1" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph1}" Margin="1" Opacity="0" Stretch="UniformToFill"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph1}" Margin="2" Opacity="0" Width="113"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Button Content="Button" HorizontalAlignment="Left" Height="0" Margin="-178,178,0,0" VerticalAlignment="Top"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border1}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph1}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border1}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph1}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border1}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph1}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph1}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- ScrollBar Style-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="ScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="ScrollBarRectangle" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Margin" Value="-5,0,0,0" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#FF8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            </Style>
    </Application.Resources>

</Application>
